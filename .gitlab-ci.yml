# This file is a template, and might need editing before it works on your project.
# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/node/tags/
image: node:latest

# This folder is cached between builds
# http://docs.gitlab.com/ee/ci/yaml/README.html#cache
cache:
  paths:
    - node_modules/

stages:
  - build
  - quality
  - security
  - dockerize

build:
  stage: build
  image: node:12.18
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  script:
    - echo "Start building App"
    - echo $CI_REGISTRY_IMAGE
    - npm install
    - echo "Build successfully!"

dockerize:
  image: docker:19.03.12
  stage: dockerize
  services:
    - docker:stable-dind
  variables:
    DOCKER_DRIVER: overlay2
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  script:
    - docker build -t $IMAGE_TAG .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $IMAGE_TAG

include:
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml
  - template: Code-Quality.gitlab-ci.yml

secret_detection:
  variables:
    SECRET_DETECTION_HISTORIC_SCAN: "true"

code_quality:
  variables:
    DOCKER_DRIVER: overlay2
  services:
    - docker:stable-dind
  artifacts:
    reports:
      codequality: gl-code-quality-report.json
  stage: quality

sast:
  artifacts:
    reports:
      sast: gl-sast-report.json
  stage: security
  variables:
    SAST_EXCLUDED_PATHS: '/test/**,**/*-test.js,/scripts,/build-scripts'
    SEARCH_MAX_DEPTH: 4

.secret-analyzer:
  artifacts:
    reports:
      secret_detection: gl-secret-detection-report.json
  stage: security
  needs: []
